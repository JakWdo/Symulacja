# Dockerfile.test - Pre-built image dla testów CI/CD
# Zawiera wszystkie dependencies, redukuje czas buildu z 5 min do <60s
#
# One-time setup (wykonaj RAZ):
#   docker build -f Dockerfile.test -t europe-central2-docker.pkg.dev/gen-lang-client-0508446677/sight-containers/test-runner:latest .
#   docker push europe-central2-docker.pkg.dev/gen-lang-client-0508446677/sight-containers/test-runner:latest
#
# Update image (gdy zmieni się requirements.txt):
#   docker build -f Dockerfile.test -t europe-central2-docker.pkg.dev/gen-lang-client-0508446677/sight-containers/test-runner:latest .
#   docker push europe-central2-docker.pkg.dev/gen-lang-client-0508446677/sight-containers/test-runner:latest

FROM python:3.11-slim

# Install system dependencies needed for Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /workspace

# Copy requirements and install ALL Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pre-install test dependencies (pytest already in requirements.txt)
# But add quality tools for CI/CD pipeline
RUN pip install --no-cache-dir \
    ruff \
    mypy \
    types-redis \
    types-requests \
    bandit[toml]

# Image ready - cloudbuild.yaml will mount code and run tests
# Time saved: ~4-5 min per build (no pip install during CI/CD)
CMD ["pytest"]
