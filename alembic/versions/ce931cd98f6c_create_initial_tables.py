"""create initial tables

Revision ID: ce931cd98f6c
Revises: 
Create Date: 2025-10-01 07:16:13.343544

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = 'ce931cd98f6c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_demographics', sa.JSON(), nullable=False),
    sa.Column('target_sample_size', sa.Integer(), nullable=False),
    sa.Column('chi_square_statistic', sa.JSON(), nullable=True),
    sa.Column('p_values', sa.JSON(), nullable=True),
    sa.Column('is_statistically_valid', sa.Boolean(), nullable=False),
    sa.Column('validation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('focus_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('persona_ids', postgresql.ARRAY(sa.UUID()), nullable=False),
    sa.Column('questions', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('mode', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('total_execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('avg_response_time_ms', sa.Float(), nullable=True),
    sa.Column('max_response_time_ms', sa.Integer(), nullable=True),
    sa.Column('overall_consistency_score', sa.Float(), nullable=True),
    sa.Column('consistency_errors_count', sa.Integer(), nullable=True),
    sa.Column('consistency_error_rate', sa.Float(), nullable=True),
    sa.Column('polarization_score', sa.Float(), nullable=True),
    sa.Column('polarization_clusters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('personas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.String(length=50), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('education_level', sa.String(length=255), nullable=True),
    sa.Column('income_bracket', sa.String(length=255), nullable=True),
    sa.Column('occupation', sa.String(length=255), nullable=True),
    sa.Column('openness', sa.Float(), nullable=True),
    sa.Column('conscientiousness', sa.Float(), nullable=True),
    sa.Column('extraversion', sa.Float(), nullable=True),
    sa.Column('agreeableness', sa.Float(), nullable=True),
    sa.Column('neuroticism', sa.Float(), nullable=True),
    sa.Column('power_distance', sa.Float(), nullable=True),
    sa.Column('individualism', sa.Float(), nullable=True),
    sa.Column('masculinity', sa.Float(), nullable=True),
    sa.Column('uncertainty_avoidance', sa.Float(), nullable=True),
    sa.Column('long_term_orientation', sa.Float(), nullable=True),
    sa.Column('indulgence', sa.Float(), nullable=True),
    sa.Column('values', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('interests', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('background_story', sa.Text(), nullable=True),
    sa.Column('personality_prompt', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('persona_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('persona_id', sa.UUID(), nullable=False),
    sa.Column('focus_group_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('embedding', Vector(768), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['focus_group_id'], ['focus_groups.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['persona_id'], ['personas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('persona_id', 'sequence_number', name='uq_persona_event_sequence')
    )
    op.create_table('persona_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('persona_id', sa.UUID(), nullable=False),
    sa.Column('focus_group_id', sa.UUID(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('retrieved_context', sa.JSON(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('llm_provider', sa.String(length=50), nullable=True),
    sa.Column('llm_model', sa.String(length=255), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('contradicts_events', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['focus_group_id'], ['focus_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['persona_id'], ['personas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('persona_responses')
    op.drop_table('persona_events')
    op.drop_table('personas')
    op.drop_table('focus_groups')
    op.drop_table('projects')
    # ### end Alembic commands ###
