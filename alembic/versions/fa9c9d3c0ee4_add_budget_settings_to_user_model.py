"""add budget settings to user model

Revision ID: fa9c9d3c0ee4
Revises: 4b4faf8cd28e
Create Date: 2025-10-28 10:49:03.976222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa9c9d3c0ee4'
down_revision: Union[str, Sequence[str], None] = '4b4faf8cd28e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Add new columns (idempotent - IF NOT EXISTS)
    # These will fail silently if columns already exist
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col['name'] for col in inspector.get_columns('users')]

    if 'warning_threshold' not in columns:
        op.add_column('users', sa.Column('warning_threshold', sa.Integer(), nullable=True))

    if 'critical_threshold' not in columns:
        op.add_column('users', sa.Column('critical_threshold', sa.Integer(), nullable=True))

    # Drop old column ONLY if it exists (idempotent - IF EXISTS)
    if 'alert_thresholds' in columns:
        op.drop_column('users', 'alert_thresholds')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('alert_thresholds', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('users', 'critical_threshold')
    op.drop_column('users', 'warning_threshold')
    # ### end Alembic commands ###
