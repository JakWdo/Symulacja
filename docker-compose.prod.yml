version: '3.8'

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: market_research_postgres
    environment:
      POSTGRES_USER: market_research
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: market_research_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U market_research"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: market_research_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  neo4j:
    image: neo4j:5.15
    container_name: market_research_neo4j
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-dev_password_change_in_prod}
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: market_research_api
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://market_research:${POSTGRES_PASSWORD:-password}@postgres:5432/market_research_db
      REDIS_URL: redis://redis:6379/0
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-dev_password_change_in_prod}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: market_research_frontend_prod
    ports:
      - "80:80"
    depends_on:
      - api

volumes:
  postgres_data:
  neo4j_data:
