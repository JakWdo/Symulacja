services:
  postgres:
    image: ankane/pgvector:latest
    container_name: market_research_postgres
    environment:
      POSTGRES_USER: market_research
      POSTGRES_PASSWORD: dev_password_change_in_prod
      POSTGRES_DB: market_research_db
    ports:
      - "5433:5432"  # Zmieniono na 5433 żeby uniknąć konfliktu
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U market_research -d market_research_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: market_research_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.15
    container_name: market_research_neo4j
    environment:
      NEO4J_AUTH: neo4j/dev_password_change_in_prod
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_memory_heap_max__size: 2G
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    container_name: market_research_celery
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=4
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql+asyncpg://market_research:dev_password_change_in_prod@postgres:5432/market_research_db
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=dev_password_change_in_prod
    env_file:
      - .env
    volumes:
      - ./:/app

  api:
    build: .
    container_name: market_research_api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://market_research:dev_password_change_in_prod@postgres:5432/market_research_db
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=dev_password_change_in_prod
    env_file:
      - .env
    volumes:
      - ./:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: market_research_frontend
    ports:
      - "5173:5173"
    depends_on:
      - api
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs: