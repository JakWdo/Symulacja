# ==============================================================================
# PRODUCTION ENVIRONMENT VARIABLES
# ==============================================================================
# WAŻNE: Ten plik jest TEMPLATE. Skopiuj go do .env.production i wypełnij!
#
# cp .env.production.example .env.production
# nano .env.production  # Wypełnij prawdziwe wartości
#
# NIE commituj .env.production do git! Jest w .gitignore.
# ==============================================================================

# ==============================================================================
# DATABASE CREDENTIALS
# ==============================================================================
POSTGRES_USER=market_research
POSTGRES_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD_IN_PRODUCTION
POSTGRES_DB=market_research_db

# ==============================================================================
# REDIS
# ==============================================================================
# Redis działa bez autentykacji w Docker internal network (OK dla basic setup)
# Dla production z external access, dodaj: requirepass w redis.conf

# ==============================================================================
# NEO4J
# ==============================================================================
NEO4J_USER=neo4j
NEO4J_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD_IN_PRODUCTION
NEO4J_HEAP_SIZE=2G
NEO4J_PAGECACHE_SIZE=1G

# ==============================================================================
# APPLICATION SECRETS
# ==============================================================================
# SECRET_KEY: Użyj `openssl rand -hex 32` do wygenerowania
SECRET_KEY=CHANGE_ME_TO_SECURE_RANDOM_STRING_USE_OPENSSL_RAND

# ==============================================================================
# AI / GOOGLE GEMINI
# ==============================================================================
GOOGLE_API_KEY=YOUR_GEMINI_API_KEY_HERE

# Models (opcjonalne - defaults w config.py)
PERSONA_GENERATION_MODEL=gemini-2.0-flash-exp
ANALYSIS_MODEL=gemini-2.0-flash-exp
DEFAULT_MODEL=gemini-2.0-flash-exp

# ==============================================================================
# SECURITY
# ==============================================================================
# ALLOWED_ORIGINS: Lista dozwolonych domains dla CORS (separowane przecinkami)
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# JWT Token lifetime (sekundy)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================
# GUNICORN (Production ASGI Server)
# ==============================================================================
# Workers: 2-4x CPU cores (np. 4 cores = 8-16 workers)
GUNICORN_WORKERS=4

# Max requests per worker before restart (zapobiega memory leaks)
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=50

# ==============================================================================
# FRONTEND BUILD
# ==============================================================================
# API URL dla frontend build (production domain)
VITE_API_URL=https://api.yourdomain.com

# ==============================================================================
# MONITORING & LOGGING (opcjonalne)
# ==============================================================================
# Sentry DSN dla error tracking
# SENTRY_DSN=https://xxx@sentry.io/xxx

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ==============================================================================
# RAG CONFIGURATION (opcjonalne - używa defaults z config.py)
# ==============================================================================
RAG_USE_HYBRID_SEARCH=true
RAG_VECTOR_WEIGHT=0.7
RAG_RRF_K=60
RAG_TOP_K=5
RAG_CHUNK_SIZE=2000
RAG_CHUNK_OVERLAP=400

# GraphRAG Node Properties
RAG_NODE_PROPERTIES_ENABLED=true
RAG_EXTRACT_SUMMARIES=true
RAG_EXTRACT_KEY_FACTS=true
RAG_RELATIONSHIP_CONFIDENCE=true

# ==============================================================================
# PERFORMANCE TUNING (opcjonalne)
# ==============================================================================
# LLM Settings
TEMPERATURE=0.7
MAX_TOKENS=8000
RANDOM_SEED=42

# Target performance
MAX_RESPONSE_TIME_PER_PERSONA=3
MAX_FOCUS_GROUP_TIME=30

# Database connection pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10

# ==============================================================================
# BACKUPS (opcjonalne - dla custom backup scripts)
# ==============================================================================
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE="0 2 * * *"  # Cron: Daily at 2 AM
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_BUCKET=your-backup-bucket

# ==============================================================================
# GENEROWANIE SECURE PASSWORDS/KEYS
# ==============================================================================
# SECRET_KEY:
#   openssl rand -hex 32
#
# Database password:
#   openssl rand -base64 32
#
# JWT secret:
#   python -c "import secrets; print(secrets.token_urlsafe(32))"
# ==============================================================================
